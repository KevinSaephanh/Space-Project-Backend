package security.filters;

import java.io.IOException;
import java.util.Collections;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.fasterxml.jackson.databind.ObjectMapper;

import dtos.AuthenticationRequest;
import dtos.UserDTO;
import security.config.JwtConfig;

/*
 * Authenticates a login request using the provided username and password
 * A Jwt token will be returned upon successful authentication
 * */
public class AuthFilter extends UsernamePasswordAuthenticationFilter {
	private AuthenticationManager authManager;
	private JwtConfig jwtConfig;

	public AuthFilter() {
		super();
		// TODO Auto-generated constructor stub
	}

	public AuthFilter(AuthenticationManager authManager, JwtConfig jwtConfig) {
		super();
		this.authManager = authManager;
		this.jwtConfig = jwtConfig;
	}

	@Override
	public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) {
		try {
			AuthenticationRequest user = new ObjectMapper().readValue(request.getInputStream(),
					AuthenticationRequest.class);
			UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(user.getUsername(),
					user.getPassword(), Collections.emptyList());
			return authManager.authenticate(authToken);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
	}
}
